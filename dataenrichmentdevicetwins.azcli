# Initialize these variables:
$subscriptionId = [Your Azure Subscription name]
$resourceGroupName = [Your Azure Resource Group name]
$location = "eastus"
$iotHubName = $resourceGroupName + "IoTHub"
$rawdataep = "rawdataep"
$dtenricheddataep = "twinenricheddataep"
$consumerGroupNameDeviceTwin = "devicetwinenrichment"
$deviceId = "SimulatedDevice000001"
$storageAccountName = $resourceGroupName+"storage"
$storageRawDataContainer = "rawdata"
$storageEnrichedDTContainer = "enricheddt"
$deviceSimFunctionAppName = $resourceGroupName+"DeviceSimulators"
$deviceSimFunctionAppGitRepo = "https://github.com/maxmushkin/IoTHubDeviceSimulator.git"


# Login and set the specified subscription
az login
az account set -s $subscriptionId

# Create the resource group in the specified location
az group create --name $resourceGroupName --location $location

# Create an IoT Hub, create a consumer group, add a device, and get the device connection string
az iot hub create -n $iotHubName -g $resourceGroupName --location $location --sku S1
az iot hub consumer-group create -n $consumerGroupNameDeviceTwin --hub-name $iotHubName -g $resourceGroupName

# Create IoT Hub Device
az iot hub device-identity create -d $deviceId --hub-name $iotHubName -g $resourceGroupName

# Saving recently created device connection string to the variable
$deviceConnectionString=$(az iot hub device-identity show-connection-string -n $iotHubName -d $deviceId --query connectionString -o tsv)

# Create Storage Account
az storage account create -n $storageAccountName -g $resourceGroupName -l $location --sku Standard_LRS

# Saving Storage account connection string to the variable
$storageConnectionString = $(az storage account show-connection-string -g $resourceGroupName -n $storageAccountName --subscription $subscriptionId --query connectionString -o tsv)

# Saving Storage account Key string to the variable
$storageAccountKey = $(az storage account keys list -g $resourceGroupName -n $storageAccountName --query '[0].value' -o json)

# Deploy a Device Simulator function app with source files deployed from the specified GitHub repo.
az functionapp create --name $deviceSimFunctionAppName --storage-account $storageAccountName --consumption-plan-location $location --resource-group $resourceGroupName --deployment-source-url $deviceSimFunctionAppGitRepo --deployment-source-branch master

# Configure Device Simulator Application Settings
az functionapp config appsettings set --name $deviceSimFunctionAppName --resource-group $resourceGroupName --settings "AzureIoTHubDeviceConnectionString=$deviceConnectionString"
az functionapp config appsettings set --name $deviceSimFunctionAppName --resource-group $resourceGroupName --settings "AzureIoTHubDeviceMessageCount=5"

# Create IoTHub RAW data routing endpoint and route
az storage container create --account-name $storageAccountName -n $storageRawDataContainer
az iot hub routing-endpoint create --resource-group $resourceGroupName --hub-name $iotHubName --endpoint-name $rawdataep --endpoint-type azurestoragecontainer --endpoint-resource-group $resourceGroupName --container-name $storageRawDataContainer --connection-string $storageConnectionString --endpoint-subscription-id $subscriptionId --encoding json -b 60 --chunk-size 10
az iot hub route create -g $resourceGroupName --hub-name $iotHubName --endpoint-name $rawdataep --source-type devicemessages  --route-name rawdata

# Create IoTHub Device Twin Enriched data endpoint
az storage container create --account-name $storageAccountName -n $storageEnrichedDTContainer
az iot hub routing-endpoint create -g $resourceGroupName --hub-name $iotHubName -n $dtenricheddataep -t azurestoragecontainer -r $resourceGroupName --container $storageEnrichedDTContainer --encoding json -c $storageConnectionString -s $subscriptionId -b 60 --chunk-size 10
az iot hub message-enrichment create --name $iotHubName --key Region --value '$twin.tags.region' --endpoints $dtenricheddataep
az iot hub message-enrichment create --name $iotHubName --key Campus --value '$twin.tags.campus' --endpoints $dtenricheddataep
az iot hub message-enrichment create --name $iotHubName --key Building --value '$twin.tags.building' --endpoints $dtenricheddataep
az iot hub message-enrichment create --name $iotHubName --key Floor --value '$twin.tags.floor' --endpoints $dtenricheddataep
az iot hub message-enrichment create --name $iotHubName --key Unit --value '$twin.tags.unit' --endpoints $dtenricheddataep
az iot hub message-enrichment create --name $iotHubName --key Tag --value '$twin.tags.tag' --endpoints $dtenricheddataep
az iot hub message-enrichment create --name $iotHubName --key Equipment --value '$twin.tags.equipment' --endpoints $dtenricheddataep

# Create IoT Hub enriched data endpoint and route
az iot hub route create -g $resourceGroupName --hub-name $iotHubName --endpoint-name $dtenricheddataep --source-type devicemessages  --route-name dtenricheddata

# Create route for built in endpoint
az iot hub route create -g $resourceGroupName --hub-name $iotHubName --endpoint-name events --source-type devicemessages  --route-name defaultep
az iot hub device-twin update --device-id $deviceId --hub-name $iotHubName --set tags="{'region':'PugetSound', 'campus': 'WestCampus', 'building': 'B121', 'floor': 'L01', 'unit': 'A1', 'tag': 'HTG LPO', 'equipment': 'VSVAV'}"

az group delete -n $resourceGroupName